const p1 = new Promise(function(resolve, reject){
  // Do an async task 
  // DB calls, cryptography, network
  setTimeout(function() {
    console.log('Async task is complete');
    resolve()
  }, 1000);
})

p1.then(function(){
  console.log("Promise Consumed")
});  // resolve ka connection hai .then ke sath

new Promise(function(resolve, reject){
  setTimeout(function(){
    console.log("Async task 2")
    resolve()
  }, 1000)
}).then(function(){
  console.log("Async 2 resolve")
})


const p3 = new Promise(function(resolve, reject){
  setTimeout(function(){
    resolve({uname: "chai", email:"abc@123.com"})  
  }, 1000)
})

p3.then(function(user){
  console.log(user)  
})


const p4 = new Promise(function(resolve, reject){
  setTimeout(function(){
    // let error = true
    let error = false
    if(!error){
      resolve({uname:"yanna", pass:"123"})
    }
    else{
      reject('ERROR: Something went wrong')
    }
  }, 1000)
})

 p4.then((user) => {
  console.log(user);
  return user.uname
}  ).then((username) => {
  console.log(username)
}).catch(function(error){
  console.log(error)
}).finally(() => console.log("The promise is resolve or rejected"))





const p5 = new Promise(function(resolve, reject){
  setTimeout(function(){
    let error = true
    // let error = false
    if(!error){
      resolve({uname:"yanna", pass:"123"})
    }
    else{
      reject('ERROR: JS went wrong')
    }
  }, 1000)
});

async function consumep5(){
  try{
    const response = await p5
    console.log(response)
  }catch(error){
    console.log(error)
  }
}
consumep5()


async function getAllUsers(){
  try{
    const responce = await fetch('http://jsonplaceholder.typicode.com/users')
  const data = await responce.json();
  console.log(data) 
  }catch(error){
    console.log("E: ", error)
  }
}
getAllUsers()